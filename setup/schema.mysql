-- $Id: schema.mysql,v 1.4 2003/10/08 07:08:31 tuxmonkey Exp $
-- vim: ts=2 sw=2 expandtab
CREATE TABLE configuration (
  name            VARCHAR(32)     NOT NULL,
  value           TEXT            NOT NULL,
  UNIQUE(name)
);

CREATE TABLE sessions (
  id              VARCHAR(32)     NOT NULL,
  sessdata        TEXT            ,
  expires         DATETIME        NOT NULL,
  UNIQUE(id)
);

CREATE TABLE users (
  userid          SMALLINT        UNSIGNED AUTO_INCREMENT, 
  username        VARCHAR(32)     NOT NULL,
  password        VARCHAR(32)     NOT NULL,
  first_name      VARCHAR(32)     NOT NULL,
  last_name       VARCHAR(32)     NOT NULL,
  contact_details TINYTEXT        ,
  email           VARCHAR(64)     NOT NULL,
  admin           ENUM('t','f')   DEFAULT 'f' NOT NULL,
  active          ENUM('t','f')   DEFAULT 't' NOT NULL,
  PRIMARY KEY(userid),
  INDEX(last_name,first_name)
) ENGINE=InnoDB;
-- Default Users (Do not remove the client user)
INSERT INTO users (username,password,email,first_name,last_name,admin) VALUES('admin','fe01ce2a7fbac8fafaed7c982a04e229','admin@localhost','Admin','User','t');
INSERT INTO users (username,password,email,first_name,last_name) VALUES('demo','fe01ce2a7fbac8fafaed7c982a04e229','demo@localhost','Demo','User');
INSERT INTO users (username,password,email,first_name,last_name,active) VALUES('client','c51019991f3032e2d102fbbfa2bc3a53','emailparser','Client','User','f');

CREATE TABLE groups (
  gid             TINYINT         UNSIGNED AUTO_INCREMENT, 
  name            VARCHAR(64)     NOT NULL,
  notes           TEXT            ,
  email           VARCHAR(64)     ,
  active          ENUM('t','f')   DEFAULT 't' NOT NULL,
  PRIMARY KEY(gid),
  UNIQUE(name),
  INDEX(name)
) ENGINE=InnoDB;
-- Default Groups (Do not remove the Parser Rejects group)
INSERT INTO groups (name,notes) VALUES('Employees','This group is the members that maintain the issue tracker system.'),
  ('Demo Group','Just a demo group'),
  ('Parser Rejects','This group is used to track emails that the parser rejects. (DO NOT DELETE)');

CREATE TABLE permissions (
  permid          TINYINT         UNSIGNED AUTO_INCREMENT,
  permission      VARCHAR(32)     NOT NULL,
  group_perm      ENUM('t','f')   DEFAULT 'f' NOT NULL,
  user_perm       ENUM('t','f')   DEFAULT 'f' NOT NULL,
  system          ENUM('t','f')   DEFAULT 'f' NOT NULL,
  PRIMARY KEY(permid),
  INDEX(user_perm),
  INDEX(group_perm)
) ENGINE=InnoDB;
-- Default Permissions
INSERT INTO permissions (permission,system) VALUES('create_issues','t'),
  ('create_announcements','t'),
  ('view_private','t'),
  ('upload_files','t'),
  ('update_group','t'),
  ('technician','t'),
  ('move_issues','t'),
  ('edit_events','t');
INSERT INTO permissions (permission,user_perm,system) VALUES('product_manager','t','t'),
  ('status_manager','t','t'),
  ('category_manager','t','t');

CREATE TABLE permission_sets (
  permsetid       TINYINT         UNSIGNED AUTO_INCREMENT,
  name            VARCHAR(32)     NOT NULL,
  description     TEXT            NOT NULL,
  permissions     VARCHAR(255)    NOT NULL,
  system          ENUM('t','f')   DEFAULT 'f' NOT NULL,
  PRIMARY KEY(permsetid)
) ENGINE=InnoDB;
-- Default Permission Sets
INSERT INTO permission_sets (name,description,permissions,system) VALUES ('Group Administrator','This permission set is for group administrators. It gives the user all available privileges for the group.','create_issues,create_announcements,view_private,upload_files,update_group,technician,move_issues,edit_events','t'),
  ('Client','This is the default client privilege set. It includes just enough permissions for a client to create issues and what would be required to update those issues with useful information.','create_issues,upload_files','t'),
  ('Privileged Client','This permission set is the same as the standard client permission set, with the addition of the permission to create announcements.','create_issues,create_announcements,upload_files','t'),
  ('Super Client','This permission set is the same as as the privileged client permission set, with the addition of the permission to view private events.','create_issues,create_announcements,view_private,upload_files','t'),
  ('Technician','This is the standard group technician permission set.','create_issues,create_announcements,view_private,upload_files,technician','t');

CREATE TABLE group_permissions (
  permid          TINYINT         UNSIGNED NOT NULL
    REFERENCES permissions (permid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(gid,permid)
) ENGINE=InnoDB;

CREATE TABLE user_permissions (
  permid          TINYINT         UNSIGNED NOT NULL
    REFERENCES permissions (permid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(userid,permid)
) ENGINE=InnoDB;

CREATE TABLE notifications (
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE CASCADE,
	userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(gid,userid)
) ENGINE=InnoDB;

CREATE TABLE group_users (
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  perm_set        TINYINT         UNSIGNED DEFAULT '0' NOT NULL,
  show_group      ENUM('t','f')   DEFAULT 't' NOT NULL,
  INDEX(gid,userid)
) ENGINE=InnoDB;
-- Deafult Group users
INSERT INTO group_users (userid,gid,perm_set) VALUES(1,1,1),(2,1,2),(1,2,1),(2,2,2);

CREATE TABLE statuses (
  sid             TINYINT         UNSIGNED AUTO_INCREMENT,
  status          VARCHAR(32)     NOT NULL,
  status_type     TINYINT         UNSIGNED NOT NULL,
  PRIMARY KEY(sid),
  UNIQUE(status),
  INDEX(status_type)
) ENGINE=InnoDB;
-- Default Statuses
INSERT INTO statuses (status,status_type) VALUES('Registered',1),
  ('Waiting on Tech',2),
  ('Waiting on Client',2),
  ('Closed by Tech',5),
  ('Closed by Client',5),
  ('Long Term',3),
  ('Stale',4),
  ('Auto Closed',6);

CREATE TABLE categories (
  cid             TINYINT         UNSIGNED AUTO_INCREMENT, 
  category        VARCHAR(64)     NOT NULL,
  PRIMARY KEY(cid),
  UNIQUE(category)
) ENGINE=InnoDB;
-- Default Categories
INSERT INTO categories (category) VALUES('Demo Category');

CREATE TABLE products (
  pid             TINYINT         UNSIGNED AUTO_INCREMENT, 
  product         VARCHAR(128)    NOT NULL,
  PRIMARY KEY(pid),
  UNIQUE(product)
) ENGINE=InnoDB;
-- Default Products
INSERT INTO products (product) VALUES('Demo Product');

CREATE TABLE issues (
  issueid         MEDIUMINT       UNSIGNED AUTO_INCREMENT,
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  openedby        SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  assignedto      SMALLINT        UNSIGNED
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  opened          DATETIME        DEFAULT 'NOW()' NOT NULL,
  closed          DATETIME        ,
  modified        TIMESTAMP(14)   NOT NULL,
  summary         VARCHAR(255)    NOT NULL,
  problem         TEXT            NOT NULL,
  status          TINYINT         UNSIGNED NOT NULL
    REFERENCES statuses (sid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  category        TINYINT         UNSIGNED DEFAULT 0 NOT NULL
    REFERENCES categories (cid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  product         TINYINT         UNSIGNED DEFAULT 0 NOT NULL
    REFERENCES products (pid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  severity        TINYINT         UNSIGNED NOT NULL,
  private         ENUM('t','f')   DEFAULT 'f' NOT NULL,
  due_date        DATETIME        ,
  PRIMARY KEY(issueid),
  INDEX(gid),
  INDEX(openedby),
  INDEX(assignedto),
  INDEX(gid,status,category,product,severity)
) ENGINE=InnoDB;

CREATE TABLE events (
  eid             INTEGER         UNSIGNED AUTO_INCREMENT,
  issueid         MEDIUMINT       UNSIGNED NOT NULL
    REFERENCES issues (issueid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  event_time      DATETIME        DEFAULT 'NOW()' NOT NULL,
  duration        NUMERIC(6,2)    DEFAULT '0.00' NOT NULL,
  private         ENUM('t','f')   DEFAULT 'f' NOT NULL,
  message         TEXT            NOT NULL,
  PRIMARY KEY(eid),
  INDEX(issueid)
) ENGINE=InnoDB;

CREATE TABLE file_details (
  fid             MEDIUMINT       UNSIGNED AUTO_INCREMENT,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  issue_file      ENUM('t','f')   DEFAULT 'f' NOT NULL,        
  typeid          MEDIUMINT       UNSIGNED NOT NULL,
  uploaded_on     DATETIME        DEFAULT 'NOW()' NOT NULL,
  filesize        MEDIUMINT       UNSIGNED DEFAULT 0 NOT NULL,
  filename        TEXT            NOT NULL,
  private         ENUM('t','f')   DEFAULT 'f' NOT NULL,
  PRIMARY KEY(fid),
  INDEX(typeid,issue_file)
) ENGINE=InnoDB;

CREATE TABLE file_data (
  fid             MEDIUMINT       UNSIGNED NOT NULL
    REFERENCES file_details (fid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  filedata        MEDIUMBLOB      NOT NULL,
  UNIQUE(fid),
  INDEX(fid)
) ENGINE=InnoDB;

CREATE TABLE alerts (
  aid             SMALLINT        UNSIGNED AUTO_INCREMENT,
  title           VARCHAR(128)    NOT NULL,
  message         TEXT            NOT NULL,
  posted          DATETIME        DEFAULT 'NOW()' NOT NULL,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  system          ENUM('t','f')   DEFAULT 'f' NOT NULL,
	PRIMARY KEY(aid),
  INDEX(system)
) ENGINE=InnoDB;

CREATE TABLE alert_permissions (
  aid             SMALLINT        UNSIGNED NOT NULL
    REFERENCES alerts (aid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  INDEX(gid,aid)
) ENGINE=InnoDB;

CREATE TABLE subscriptions (
	userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
	issueid         MEDIUMINT       UNSIGNED NOT NULL
    REFERENCES issues (issueid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(issueid,userid)
) ENGINE=InnoDB;

CREATE TABLE view_tracking (
  issueid         MEDIUMINT       UNSIGNED NOT NULL
    REFERENCES issues (issueid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  viewed          TIMESTAMP(14)   NOT NULL,
  INDEX(userid,issueid)
) ENGINE=InnoDB;

CREATE TABLE logs (
	log_type        VARCHAR(32)     ,
	log_message     TEXT            NOT NULL,
	log_time        DATETIME        NOT NULL,
	log_user        SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  INDEX(log_type)
) ENGINE=InnoDB;

CREATE TABLE group_statuses (
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  sid             TINYINT         UNSIGNED NOT NULL
    REFERENCES statuses (sid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(gid,sid)
) ENGINE=InnoDB;
-- Default Group Statuses
INSERT INTO group_statuses (gid,sid) VALUES(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),
  (2,1),(2,2),(2,3),(2,4),(2,5),(2,6),
  (3,1),(3,2),(3,3),(3,4),(3,5),(3,6);

CREATE TABLE group_categories (
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  cid             TINYINT         UNSIGNED NOT NULL
    REFERENCES categories (cid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(gid,cid)
) ENGINE=InnoDB;
-- Default Group Categories
INSERT INTO group_categories (gid,cid) VALUES(1,1),(2,1),(3,1);

CREATE TABLE group_products (
  gid             TINYINT         UNSIGNED NOT NULL
    REFERENCES groups (gid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  pid             TINYINT         UNSIGNED NOT NULL
    REFERENCES products (pid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(gid,pid)
) ENGINE=InnoDB;
-- Default Group Products
INSERT INTO group_products (gid,pid) VALUES(1,1),(2,1),(3,1);

CREATE TABLE issue_log (
  issueid         MEDIUMINT       UNSIGNED NOT NULL
    REFERENCES issues (issueid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
	logged          TIMESTAMP(14)   NOT NULL,
	message         TEXT            ,
  private         ENUM('t','f')   DEFAULT 'f' NOT NULL,
  INDEX(issueid,private)
) ENGINE=InnoDB;

CREATE TABLE preferences (
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  preference      VARCHAR(64)     ,
  value           VARCHAR(255)    ,
  INDEX(userid)
) ENGINE=InnoDB;

CREATE TABLE xmlrpc_connections (
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  token           VARCHAR(32)     NOT NULL,
  ipaddr          VARCHAR(15)     NOT NULL,
  UNIQUE(userid)
) ENGINE=InnoDB;

CREATE TABLE reports (
  rid             SMALLINT        UNSIGNED AUTO_INCREMENT,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE RESTRICT,
  name            VARCHAR(32)     NOT NULL,
  options         TEXT            NOT NULL,
  PRIMARY KEY(rid),
  INDEX(userid)
) ENGINE=InnoDB;

CREATE TABLE report_permissions (
  rid             SMALLINT        UNSIGNED NOT NULL
    REFERENCES reports (rid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  userid          SMALLINT        UNSIGNED NOT NULL
    REFERENCES users (userid)
      ON UPDATE CASCADE ON DELETE CASCADE,
  INDEX(userid,rid)
) ENGINE=InnoDB;
